describe('pos', function() {
  describe('unit testing', function () {
    var allItems;
    beforeEach(function () {
      allItems = loadAllItems();
    });
    describe('test buildCartItems function', function () {
      var inputs;
      beforeEach(function() {
        inputs = [
          'ITEM000000',
          'ITEM000000',
          'ITEM000000',
          'ITEM000000',
          'ITEM000000',
          'ITEM000001',
          'ITEM000001',
          'ITEM000004'
        ];
      });
      it('should print correct cartItems',function () {
        var cartItems=[
          {
            allItems:{
              barcode: 'ITEM000001',
              name: '雪碧',
              unit: '瓶',
              price: 3.00
            },
            count:5
          },
          {
            allItems: {
              barcode: 'ITEM000003',
              name: '荔枝',
              unit: '斤',
              price: 15.

            },
            count: 2
          },
          {
            allItems: {
              barcode: 'ITEM000005',
              name: '方便面',
              unit: '袋',
              price: 4.50
            },
            count:3
          }
        ];
        expect(buildCartItems(inputs,allItems)).toEqual(cartItems);
      });
    });
    describe('test buildRceciptItems function', function () {
      var cartitems;
      beforeEach(function () {
        cartItems=[
          {
            allItems:{
              barcode: 'ITEM000001',
              name: '雪碧',
              unit: '瓶',
              price: 3.00
            },
            count:5
          },
          {
            allItems: {
              barcode: 'ITEM000003',
              name: '荔枝',
              unit: '斤',
              price: 15.

            },
            count: 2
          },
          {
            allItems: {
              barcode: 'ITEM000005',
              name: '方便面',
              unit: '袋',
              price: 4.50
            },
            count:3
          }
        ];
      });
      it('return correct receipttotal', function () {
        var receiptItems = [
          {
            cartItems: {
              allItems: {
                barcode: 'ITEM000001',
                name: '雪碧',
                unit: '瓶',
                price: 3.00
              },
              count: 5
            },
            subtatol:12.00,
            saved:3.00
          },
          {
            cartItems:{
              allItems: {
                barcode: 'ITEM000003',
                name: '荔枝',
                unit: '斤',
                price: 15.

              },
              count: 2
            },
            subtatol:30.00,
            saved:0.00
          },
          {
            cartItems: {
              allItems:  {
                barcode: 'ITEM000005',
                name: '方便面',
                unit: '袋',
                price: 4.50
              },
              count:3
            },
            subtatol:9.00,
            saved:4.50
          }
        ];
        expect(buildRceciptItems(cartItems)).toEqual(receiptItems);
      });
    });
    describe('test bulidRceipt function', function () {
      var receiptItems;
      beforeEach(function () {
        receiptItems = [
          {
            cartItems: {
              allItems: {
                barcode: 'ITEM000001',
                name: '雪碧',
                unit: '瓶',
                price: 3.00
              },
              count: 5
            },
            subtatol:12.00,
            saved:3.00
          },
          {
            cartItems:{
              allItems: {
                barcode: 'ITEM000003',
                name: '荔枝',
                unit: '斤',
                price: 15.

              },
              count: 2
            },
            subtatol:30.00,
            saved:0.00
          },
          {
            cartItems: {
              allItems:  {
                barcode: 'ITEM000005',
                name: '方便面',
                unit: '袋',
                price: 4.50
              },
              count:3
            },
            subtatol:9.00,
            saved:4.50
          }
        ];
      });
      it('return correct receipt', function () {
        var receipt = {
          receiptItems: [  {
            cartItems: {
              allItems: {
                barcode: 'ITEM000001',
                name: '雪碧',
                unit: '瓶',
                price: 3.00
              },
              count: 5
            },
            subtatol:12.00,
            saved:3.00
          },
        {
          cartItems:{
            allItems: {
              barcode: 'ITEM000003',
                name: '荔枝',
                unit: '斤',
                price: 15.

            },
            count: 2
          },
          subtatol:30.00,
            saved:0.00
        },
        {
          cartItems: {
            allItems:  {
              barcode: 'ITEM000005',
                name: '方便面',
                unit: '袋',
                price: 4.50
            },
            count:3
          },
          subtatol:9.00,
            saved:4.50
        }
          ],
          tatol:51.00,
          savedtatol:7.50
        };
        expect(buildRceipt(receiptItems)).toEqual(receipt);
      });
    });
  });

  var allItems;
  var inputs;

  beforeEach(function() {
    allItems = loadAllItems();
    inputs = [
      'ITEM000001',
      'ITEM000001',
      'ITEM000001',
      'ITEM000001',
      'ITEM000001',
      'ITEM000003-2',
      'ITEM000005',
      'ITEM000005',
      'ITEM000005'
    ];
  });

  it('should print correct text', function() {

    spyOn(console, 'log');

    printReceipt(inputs);

    var expectText =
      '***<没钱赚商店>收据***\n' +
      '名称：雪碧，数量：5瓶，单价：3.00(元)，小计：12.00(元)\n' +
      '名称：荔枝，数量：2斤，单价：15.00(元)，小计：30.00(元)\n' +
      '名称：方便面，数量：3袋，单价：4.50(元)，小计：9.00(元)\n' +
      '----------------------\n' +
      '总计：51.00(元)\n' +
      '节省：7.50(元)\n' +
      '**********************';

    expect(console.log).toHaveBeenCalledWith(expectText);
  });
});
